#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : blockdiag
Version  : 2.0.1
Release  : 29
URL      : https://files.pythonhosted.org/packages/b6/1b/eab880ae3e6c7e24ae5adecc40ee7dd05c9ebb0dff6c39b52472844ce9b7/blockdiag-2.0.1.tar.gz
Source0  : https://files.pythonhosted.org/packages/b6/1b/eab880ae3e6c7e24ae5adecc40ee7dd05c9ebb0dff6c39b52472844ce9b7/blockdiag-2.0.1.tar.gz
Summary  : blockdiag generates block-diagram image from text
Group    : Development/Tools
License  : Apache-2.0 BSD-3-Clause
Requires: blockdiag-bin = %{version}-%{release}
Requires: blockdiag-license = %{version}-%{release}
Requires: blockdiag-python = %{version}-%{release}
Requires: blockdiag-python3 = %{version}-%{release}
Requires: Pillow
Requires: docutils
Requires: funcparserlib
Requires: reportlab
Requires: setuptools
Requires: webcolors
BuildRequires : Pillow
BuildRequires : Pillow-python
BuildRequires : buildreq-distutils3
BuildRequires : docutils
BuildRequires : docutils-python
BuildRequires : funcparserlib
BuildRequires : funcparserlib-python
BuildRequires : funcsigs-python
BuildRequires : nose-python
BuildRequires : pep8
BuildRequires : pluggy
BuildRequires : py-python
BuildRequires : pytest
BuildRequires : python-mock
BuildRequires : reportlab
BuildRequires : reportlab-python
BuildRequires : setuptools
BuildRequires : six
BuildRequires : tox
BuildRequires : virtualenv
BuildRequires : webcolors
BuildRequires : webcolors-python

%description
`blockdiag` generate block-diagram image file from spec-text file.

.. image:: https://drone.io/bitbucket.org/blockdiag/blockdiag/status.png
   :target: https://drone.io/bitbucket.org/blockdiag/blockdiag
   :alt: drone.io CI build status

.. image:: https://pypip.in/v/blockdiag/badge.png
   :target: https://pypi.python.org/pypi/blockdiag/
   :alt: Latest PyPI version

.. image:: https://pypip.in/d/blockdiag/badge.png
   :target: https://pypi.python.org/pypi/blockdiag/
   :alt: Number of PyPI downloads


Features
========
* Generate block-diagram from dot like text (basic feature).
* Multilingualization for node-label (utf-8 only).

You can get some examples and generated images on
`blockdiag.com <http://blockdiag.com/en/blockdiag/examples.html>`_ .

Setup
=====

Use pip::

   $ sudo pip install blockdiag

If you want to export as PDF format, give pdf arguments::

   $ sudo pip install "blockdiag[pdf]"


Copy and modify ini file. example::

   $ cp <blockdiag installed path>/blockdiag/examples/simple.diag .
   $ vi simple.diag

Please refer to `spec-text setting sample`_ section for the format of the
`simpla.diag` configuration file.

spec-text setting sample
========================
Few examples are available.
You can get more examples at
`blockdiag.com`_ .

simple.diag
------------
simple.diag is simply define nodes and transitions by dot-like text format::

    diagram admin {
      top_page -> config -> config_edit -> config_confirm -> top_page;
    }

screen.diag
------------
screen.diag is more complexly sample. diaglam nodes have a alternative label
and some transitions::

    diagram admin {
      top_page [label = "Top page"];

      foo_index [label = "List of FOOs"];
      foo_detail [label = "Detail FOO"];
      foo_add [label = "Add FOO"];
      foo_add_confirm [label = "Add FOO (confirm)"];
      foo_edit [label = "Edit FOO"];
      foo_edit_confirm [label = "Edit FOO (confirm)"];
      foo_delete_confirm [label = "Delete FOO (confirm)"];

      bar_detail [label = "Detail of BAR"];
      bar_edit [label = "Edit BAR"];
      bar_edit_confirm [label = "Edit BAR (confirm)"];

      logout;

      top_page -> foo_index;
      top_page -> bar_detail;

      foo_index -> foo_detail;
                   foo_detail -> foo_edit;
                   foo_detail -> foo_delete_confirm;
      foo_index -> foo_add -> foo_add_confirm -> foo_index;
      foo_index -> foo_edit -> foo_edit_confirm -> foo_index;
      foo_index -> foo_delete_confirm -> foo_index;

      bar_detail -> bar_edit -> bar_edit_confirm -> bar_detail;
    }


Usage
=====
Execute blockdiag command::

   $ blockdiag simple.diag
   $ ls simple.png
   simple.png


Requirements
============
* Python 3.5 or later
* Pillow 3.0 or later
* funcparserlib 0.3.6 or later
* reportlab (optional)
* wand and imagemagick (optional)
* setuptools


License
=======
Apache License 2.0

%package bin
Summary: bin components for the blockdiag package.
Group: Binaries
Requires: blockdiag-license = %{version}-%{release}

%description bin
bin components for the blockdiag package.


%package license
Summary: license components for the blockdiag package.
Group: Default

%description license
license components for the blockdiag package.


%package python
Summary: python components for the blockdiag package.
Group: Default
Requires: blockdiag-python3 = %{version}-%{release}

%description python
python components for the blockdiag package.


%package python3
Summary: python3 components for the blockdiag package.
Group: Default
Requires: python3-core
Provides: pypi(blockdiag)

%description python3
python3 components for the blockdiag package.


%prep
%setup -q -n blockdiag-2.0.1
cd %{_builddir}/blockdiag-2.0.1

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1582851097
# -Werror is for werrorists
export GCC_IGNORE_WERROR=1
export CFLAGS="$CFLAGS -fno-lto "
export FCFLAGS="$CFLAGS -fno-lto "
export FFLAGS="$CFLAGS -fno-lto "
export CXXFLAGS="$CXXFLAGS -fno-lto "
export MAKEFLAGS=%{?_smp_mflags}
python3 setup.py build

%check
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
PYTHONPATH=%{buildroot}$(python -c "import sys; print(sys.path[-1])") python setup.py test || :
%install
export MAKEFLAGS=%{?_smp_mflags}
rm -rf %{buildroot}
mkdir -p %{buildroot}/usr/share/package-licenses/blockdiag
cp %{_builddir}/blockdiag-2.0.1/LICENSE %{buildroot}/usr/share/package-licenses/blockdiag/2b8b815229aa8a61e483fb4ba0588b8b6c491890
cp %{_builddir}/blockdiag-2.0.1/src/blockdiag/tests/VLGothic/LICENSE %{buildroot}/usr/share/package-licenses/blockdiag/af07a3a5218239724d3c4ad4f9e4746835129293
cp %{_builddir}/blockdiag-2.0.1/src/blockdiag/tests/VLGothic/LICENSE.en %{buildroot}/usr/share/package-licenses/blockdiag/25d28628ff8ea8da700469e7b9ce06e5faecfed0
python3 -tt setup.py build  install --root=%{buildroot}
echo ----[ mark ]----
cat %{buildroot}/usr/lib/python3*/site-packages/*/requires.txt || :
echo ----[ mark ]----

%files
%defattr(-,root,root,-)

%files bin
%defattr(-,root,root,-)
/usr/bin/blockdiag

%files license
%defattr(0644,root,root,0755)
/usr/share/package-licenses/blockdiag/25d28628ff8ea8da700469e7b9ce06e5faecfed0
/usr/share/package-licenses/blockdiag/2b8b815229aa8a61e483fb4ba0588b8b6c491890
/usr/share/package-licenses/blockdiag/af07a3a5218239724d3c4ad4f9e4746835129293

%files python
%defattr(-,root,root,-)

%files python3
%defattr(-,root,root,-)
/usr/lib/python3*/*
